#encoding=UTF-8
# Configuration files must begin with a line specifying the encoding
#  of the the file.

#********************************************************************
# Wrapper License Properties (Ignored by Community Edition)
#********************************************************************
# Professional and Standard Editions of the Wrapper require a valid
#  License Key to start.  Licenses can be purchased or a trial license
#  requested on the following pages:
# http://wrapper.tanukisoftware.com/purchase
# http://wrapper.tanukisoftware.com/trial

# Include file problems can be debugged by removing the first '#'
#  from the following line:
##include.debug

# The Wrapper will look for either of the following optional files for a
#  valid License Key.  License Key properties can optionally be included
#  directly in this configuration file.
#include ../conf/wrapper-license.conf
#include ../conf/wrapper-license-%WRAPPER_HOST_NAME%.conf

# The following property will output information about which License Key(s)
#  are being found, and can aid in resolving any licensing problems.
#wrapper.license.debug=TRUE

#********************************************************************
# Wrapper Localization
#********************************************************************
# Specify the locale which the Wrapper should use.  By default the system
#  locale is used.
#wrapper.lang=en_US # en_US or ja_JP

# Specify the location of the Wrapper's language resources.  If these are
#  missing, the Wrapper will default to the en_US locale.
#wrapper.lang.folder=../lang

wrapper.restart.reload_configuration=TRUE

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
#  Locate the java binary on the system PATH:
wrapper.java.command=java

# Tell the Wrapper to log the full generated Java command line.
#wrapper.java.command.loglevel=INFO

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=../plugins/com.pmease.quickbuild.bootstrap
wrapper.java.classpath.2=../plugins/com.pmease.quickbuild.bootstrap/lib/commons-codec-1.3.jar
wrapper.java.classpath.3=../plugins/com.pmease.quickbuild.bootstrap/lib/wrapper.jar
wrapper.java.classpath.4=../plugins/com.pmease.quickbuild.bootstrap/lib/slf4j-api-1.7.2.jar
wrapper.java.classpath.5=../plugins/com.pmease.quickbuild.bootstrap/lib/jul-to-slf4j-1.7.2.jar
wrapper.java.classpath.6=../plugins/com.pmease.quickbuild.bootstrap/lib/log4j-1.2.15.jar
wrapper.java.classpath.7=../plugins/com.pmease.quickbuild.bootstrap/lib/hessian-4.0.7.jar
wrapper.java.classpath.8=../plugins/com.pmease.quickbuild.bootstrap/lib/joda-time-2.0.jar
wrapper.java.classpath.9=../plugins/com.pmease.quickbuild.bootstrap/lib/commons-logging-1.0.4.jar
wrapper.java.classpath.10=../plugins/com.pmease.quickbuild.bootstrap/lib/servlet-api-3.0.20100224.jar
wrapper.java.classpath.11=../plugins/com.pmease.quickbuild.bootstrap/lib/slf4j-log4j12-1.7.2.jar
wrapper.java.classpath.12=../plugins/com.pmease.quickbuild.bootstrap/lib/commons-io-1.4.jar
wrapper.java.classpath.13=../plugins/com.pmease.quickbuild.bootstrap/lib/commons-lang-2.4.jar


# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=.
wrapper.java.library.path.2=./lib
wrapper.java.library.path.3=../plugins/com.pmease.quickbuild.libs
wrapper.java.library.path.append_system_path=TRUE

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE
# Java Additional Parameters
wrapper.java.additional.1=-Djava.awt.headless=true
wrapper.java.additional.2=-Xverify:none
#wrapper.java.additional.3=-Dreset
wrapper.java.additional.4=-XX:MaxPermSize=256m

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=128

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=1024

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=com.pmease.quickbuild.bootstrap.Bootstrap
wrapper.app.parameter.2=1
wrapper.app.parameter.3=start
wrapper.app.parameter.4=com.pmease.quickbuild.bootstrap.Bootstrap
wrapper.app.parameter.5=FALSE
wrapper.app.parameter.6=1
wrapper.app.parameter.7=stop

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=../logs/console.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=PM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=250k

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=1

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Title to use when running as a console
wrapper.console.title=QuickBuild Server

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=QuickBuild Server

# Display name of the service
wrapper.displayname=QuickBuild Server

# Description of the service
wrapper.description=QuickBuild Server

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

# Specify NT service account. Leave empty to use local system account.
wrapper.ntservice.account=
wrapper.ntservice.password=

# Optionally mount NT network shares 
#wrapper.share.1.location=\\server\share
#wrapper.share.1.target=Z:
#wrapper.share.1.account=domain\user
#wrapper.share.1.password=userpass
#wrapper.share.1.startup.premapped=CONTINUE
#wrapper.share.1.startup.failure=SHUTDOWN
#wrapper.share.1.startup.max_retries=5
#wrapper.share.1.startup.retry_interval=10
#wrapper.share.1.shutdown.unmap=TRUE
#wrapper.share.1.shutdown.unmap.force=TRUE

wrapper.jvm_exit.timeout=60

# Disable timeouts
wrapper.startup.timeout=0
wrapper.shutdown.timeout=0
wrapper.ping.timeout=0
wrapper.cpu.timeout=3600
wrapper.ping.interval=3600
